apiVersion: v1
kind: Namespace
metadata:
  annotations:
    linkerd.io/inject: disabled
  labels:
    appmesh.k8s.aws/sidecarInjectorWebhook: disabled
    istio-injection: disabled
  name: flux-system
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    env: staging
  name: staging
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    name: flux
  name: flux
  namespace: flux-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    env: staging
  name: namespace-read-role
  namespace: staging
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - services
  - endpoints
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    name: flux
  name: flux
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    env: staging
  name: namespace-read-rolebinding
  namespace: staging
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: namespace-read-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: staging
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    name: flux
  name: flux
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flux
subjects:
- kind: ServiceAccount
  name: flux
  namespace: flux-system
---
apiVersion: v1
data:
  application.yml: "# MySQL\nspring:\n\n  datasource:\n    url: jdbc:mysql://java-demo-database-service:3306/database?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC\n
    \   username: jonathan\n    password: password\n\n  jpa:\n    hibernate:\n      ddl-auto:
    validate\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL55Dialect\n
    \       show_sql: true\n        format_sql: true\n\n  h2:\n    console:\n      enabled:
    false\n\n  liquibase:\n    change-log: classpath:/db/db.changelog-master.xml\n#
    \              \nlogging:\n  config: classpath:log4j2-dev.xml"
kind: ConfigMap
metadata:
  labels:
    env: staging
  name: carros
  namespace: staging
---
apiVersion: v1
kind: Secret
metadata:
  name: flux-git-deploy
  namespace: flux-system
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: memcached
  namespace: flux-system
spec:
  ports:
  - name: memcached
    port: 11211
  selector:
    name: memcached
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: java-demo-backend
    env: staging
    role: backend
  name: java-demo-backend-service
  namespace: staging
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: java-demo-backend
    env: staging
    role: backend
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: java-demo-database
    env: staging
    role: database
    
  name: java-demo-database-service
  namespace: staging
spec:
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: java-demo-database
    env: staging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flux
  namespace: flux-system
spec:
  replicas: 1
  selector:
    matchLabels:
      name: flux
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/port: "3031"
      labels:
        name: flux
    spec:
      containers:
      - args:
        - --manifest-generation=true
        - --memcached-hostname=memcached.flux-system
        - --memcached-service=
        - --git-poll-interval=5m
        - --sync-interval=5m
        - --ssh-keygen-dir=/var/fluxd/keygen
        - --git-branch=master
        - --git-path=staging
        - --git-url=git@github.com:jojoooo1/java-demo-flux
        - --git-email=chevalier.jonathan@live.fr
        - --sync-garbage-collection
        image: docker.io/fluxcd/flux:1.19.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /api/flux/v6/identity.pub
            port: 3030
          initialDelaySeconds: 5
          timeoutSeconds: 5
        name: flux
        ports:
        - containerPort: 3030
        readinessProbe:
          httpGet:
            path: /api/flux/v6/identity.pub
            port: 3030
          initialDelaySeconds: 5
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - mountPath: /etc/fluxd/ssh
          name: git-key
          readOnly: true
        - mountPath: /var/fluxd/keygen
          name: git-keygen
      nodeSelector:
        beta.kubernetes.io/os: linux
      serviceAccountName: flux
      volumes:
      - name: git-key
        secret:
          defaultMode: 256
          secretName: flux-git-deploy
      - emptyDir:
          medium: Memory
        name: git-keygen
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: memcached
  namespace: flux-system
spec:
  replicas: 1
  selector:
    matchLabels:
      name: memcached
  template:
    metadata:
      labels:
        name: memcached
    spec:
      containers:
      - args:
        - -m 512
        - -I 5m
        - -p 11211
        image: memcached:1.5.20
        imagePullPolicy: IfNotPresent
        name: memcached
        ports:
        - containerPort: 11211
          name: clients
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 11211
          runAsUser: 11211
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    fluxcd.io/automated: "true"
    fluxcd.io/tag.java-demo-backend: glob:rc-*
  labels:
    app: java-demo
    env: staging
    role: backend
  name: java-demo-backend-deployment
  namespace: staging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: java-demo
      env: staging
      role: backend
  template:
    metadata:
      labels:
        app: java-demo
        env: staging
        role: backend
    spec:
      containers:
      - image: docker.io/jojoooo1/carros:1.1.0.RC-6dd3e69727479aee57e2961784b37086937bb697
        name: java-demo-backend
        ports:
        - containerPort: 8080
          name: container-port
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: container-port
          periodSeconds: 10
        resources:
          limits:
            cpu: "1"
            memory: 1024Mi
          requests:
            cpu: "1"
            memory: 512Mi
        startupProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: container-port
          periodSeconds: 25
      serviceAccountName: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    fluxcd.io/automated: "true"
    fluxcd.io/tag.java-demo-database: semver:~8.0
  labels:
    app: java-demo
    env: staging
    role: database
  name: java-demo-database-deployment
  namespace: staging
spec:
  replicas: 2
  selector:
    matchLabels:
      app: java-demo
      env: staging
      role: database
  template:
    metadata:
      labels:
        app: java-demo
        env: staging
        role: database
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: MYSQL_DATABASE
          value: database
        - name: MYSQL_USER
          value: jonathan
        - name: MYSQL_PASSWORD
          value: password
        image: mysql:8.0.19
        imagePullPolicy: IfNotPresent
        name: java-demo-database
        ports:
        - containerPort: 3306
      serviceAccountName: default
